/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 21 13:39:12 GMT 2019
 */

package de.ch4inl3ss;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.ch4inl3ss.LegacyExampleApplication;
import de.ch4inl3ss.repository.ProgrammerRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.springframework.boot.CommandLineRunner;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LegacyExampleApplication_ESTest extends LegacyExampleApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "#BO5&_V!=";
      stringArray0[1] = "";
      stringArray0[2] = "";
      // Undeclared exception!
      LegacyExampleApplication.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        LegacyExampleApplication.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springframework.core.env.SimpleCommandLineArgsParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        LegacyExampleApplication.main((String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Args must not be null
         //
         verifyException("org.springframework.util.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LegacyExampleApplication legacyExampleApplication0 = new LegacyExampleApplication();
      ProgrammerRepository programmerRepository0 = mock(ProgrammerRepository.class, new ViolatedAssumptionAnswer());
      CommandLineRunner commandLineRunner0 = legacyExampleApplication0.addCustomers(programmerRepository0);
      assertNotNull(commandLineRunner0);
  }
}
