/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 21 13:43:16 GMT 2019
 */

package de.ch4inl3ss.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.ch4inl3ss.config.WebConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.mock.web.MockServletContext;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WebConfig_ESTest extends WebConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WebConfig webConfig0 = new WebConfig();
      // Undeclared exception!
      try { 
        webConfig0.addResourceHandlers((ResourceHandlerRegistry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.ch4inl3ss.config.WebConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WebConfig webConfig0 = new WebConfig();
      ClassPathXmlApplicationContext classPathXmlApplicationContext0 = new ClassPathXmlApplicationContext();
      MockServletContext mockServletContext0 = new MockServletContext(")/>~?'+ha2\".x", classPathXmlApplicationContext0);
      ResourceHandlerRegistry resourceHandlerRegistry0 = new ResourceHandlerRegistry(classPathXmlApplicationContext0, mockServletContext0);
      webConfig0.addResourceHandlers(resourceHandlerRegistry0);
  }
}
